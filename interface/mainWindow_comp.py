# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'interface/mainWindow_comp.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
import time
import pandas as pd
import logging
from PyQt5 import QtCore, QtGui, QtWidgets

from pcbr import PCBR
from utils.typing import represents_float
from user_request import UserRequest
from multichoice import MultiChoiceDialog

app_logger = logging.getLogger('app')
pd.set_option('max_columns', None)
pd.set_option('display.expand_frame_repr', False)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(846, 668)
        self.center(MainWindow)

        self.radio_groups = dict()
        self.radio_groups_values = dict()
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        # Done button
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(750, 340, 80, 23))
        self.pushButton.setObjectName("done")
        self.pushButton.clicked.connect(self.run_pcbr)

        # Tabs (i.e. basic, preferences, advances)
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(10, 10, 711, 631))
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")

        # BASIC QUESTIONS TAB
        # How frequently do you replace your computer?
        self.groupBox_5 = QtWidgets.QGroupBox(self.tab)
        self.groupBox_5.setGeometry(QtCore.QRect(30, 500, 671, 41))
        self.groupBox_5.setObjectName("groupBox_5")
        # 1-2 years
        self.radioButton_17 = QtWidgets.QRadioButton(self.groupBox_5)
        self.radioButton_17.setGeometry(QtCore.QRect(102, 20, 100, 21))
        self.radioButton_17.setObjectName("radioButton_17")
        # 2-5 years
        self.radioButton_18 = QtWidgets.QRadioButton(self.groupBox_5)
        self.radioButton_18.setGeometry(QtCore.QRect(208, 20, 100, 21))
        self.radioButton_18.setObjectName("radioButton_18")
        # 5-7 years
        self.radioButton_19 = QtWidgets.QRadioButton(self.groupBox_5)
        self.radioButton_19.setGeometry(QtCore.QRect(314, 20, 100, 21))
        self.radioButton_19.setObjectName("radioButton_19")
        # 7-10 years
        self.radioButton_20 = QtWidgets.QRadioButton(self.groupBox_5)
        self.radioButton_20.setGeometry(QtCore.QRect(420, 20, 100, 21))
        self.radioButton_20.setObjectName("radioButton_20")
        self.radio_groups["replace_frequency"] = [self.radioButton_17, self.radioButton_18, self.radioButton_19, self.radioButton_20]
        self.radio_groups_values["replace_frequency"] = [1, 2, 3, 4]

        # What is your experience level with computers?
        self.groupBox = QtWidgets.QGroupBox(self.tab)
        self.groupBox.setGeometry(QtCore.QRect(30, 10, 671, 171))
        self.groupBox.setObjectName("groupBox")
        self.layoutWidget = QtWidgets.QWidget(self.groupBox)
        self.layoutWidget.setGeometry(QtCore.QRect(60, 30, 186, 131))
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        # My name is Linus Torvalds
        self.radioButton_5 = QtWidgets.QRadioButton(self.layoutWidget)
        self.radioButton_5.setObjectName("radioButton_5")
        self.verticalLayout_2.addWidget(self.radioButton_5)
        # Novice
        self.radioButton_2 = QtWidgets.QRadioButton(self.layoutWidget)
        self.radioButton_2.setObjectName("radioButton_2")
        self.verticalLayout_2.addWidget(self.radioButton_2)
        # Intermediate
        self.radioButton_3 = QtWidgets.QRadioButton(self.layoutWidget)
        self.radioButton_3.setObjectName("radioButton_3")
        self.verticalLayout_2.addWidget(self.radioButton_3)
        # Expert
        self.radioButton_4 = QtWidgets.QRadioButton(self.layoutWidget)
        self.radioButton_4.setObjectName("radioButton_4")
        self.verticalLayout_2.addWidget(self.radioButton_4)
        # They scare me
        self.radioButton = QtWidgets.QRadioButton(self.layoutWidget)
        self.radioButton.setObjectName("radioButton")
        self.verticalLayout_2.addWidget(self.radioButton)
        self.radio_groups["experience"] = [self.radioButton, self.radioButton_2, self.radioButton_3, self.radioButton_4, self.radioButton_5]
        self.radio_groups_values["experience"] = [1, 2, 3, 4, 5]

        # What is your budget?
        self.groupBox_4 = QtWidgets.QGroupBox(self.tab)
        self.groupBox_4.setGeometry(QtCore.QRect(30, 450, 671, 41))
        self.groupBox_4.setObjectName("groupBox_4")
        # Low
        self.radioButton_15 = QtWidgets.QRadioButton(self.groupBox_4)
        self.radioButton_15.setGeometry(QtCore.QRect(168, 20, 100, 21))
        self.radioButton_15.setObjectName("radioButton_15")
        # Medium
        self.radioButton_14 = QtWidgets.QRadioButton(self.groupBox_4)
        self.radioButton_14.setGeometry(QtCore.QRect(274, 20, 100, 21))
        self.radioButton_14.setObjectName("radioButton_14")
        # High
        self.radioButton_16 = QtWidgets.QRadioButton(self.groupBox_4)
        self.radioButton_16.setGeometry(QtCore.QRect(380, 20, 100, 21))
        self.radioButton_16.setObjectName("radioButton_16")
        self.radio_groups["budget"] = [self.radioButton_15, self.radioButton_14, self.radioButton_16]
        self.radio_groups_values["budget"] = [1, 2, 3]

        # What is the primary use of this computer? 
        self.groupBox_3 = QtWidgets.QGroupBox(self.tab)
        self.groupBox_3.setGeometry(QtCore.QRect(30, 240, 671, 201))
        self.groupBox_3.setObjectName("groupBox_3")
        self.layoutWidget1 = QtWidgets.QWidget(self.groupBox_3)
        self.layoutWidget1.setGeometry(QtCore.QRect(30, 30, 225, 158))
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget1)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        # Machine Learning programming
        self.radioButton_13 = QtWidgets.QRadioButton(self.layoutWidget1)
        self.radioButton_13.setObjectName("radioButton_13")
        self.verticalLayout.addWidget(self.radioButton_13)
        # Home/casual use
        self.radioButton_8 = QtWidgets.QRadioButton(self.layoutWidget1)
        self.radioButton_8.setObjectName("radioButton_8")
        self.verticalLayout.addWidget(self.radioButton_8)
        # Other programming
        self.radioButton_23 = QtWidgets.QRadioButton(self.layoutWidget1)
        self.radioButton_23.setObjectName("radioButton_23")
        self.verticalLayout.addWidget(self.radioButton_23)
        # Work
        self.radioButton_11 = QtWidgets.QRadioButton(self.layoutWidget1)
        self.radioButton_11.setObjectName("radioButton_11")
        self.verticalLayout.addWidget(self.radioButton_11)
        # Gaming
        self.radioButton_10 = QtWidgets.QRadioButton(self.layoutWidget1)
        self.radioButton_10.setObjectName("radioButton_10")
        self.verticalLayout.addWidget(self.radioButton_10)
        # Graphics/music/video production
        self.radioButton_12 = QtWidgets.QRadioButton(self.layoutWidget1)
        self.radioButton_12.setObjectName("radioButton_12")
        self.verticalLayout.addWidget(self.radioButton_12)
        self.radio_groups["primary_use"] = [self.radioButton_8, self.radioButton_11, self.radioButton_10, self.radioButton_12, self.radioButton_13, self.radioButton_23]
        self.radio_groups_values["primary_use"] = ['Home', 'Work', 'Gaming', 'Production', 'ML', 'Programming']

        # Home, Work, Gaming, Production, ML, Programming
        # Do you need an optical drive?
        self.groupBox_6 = QtWidgets.QGroupBox(self.tab)
        self.groupBox_6.setGeometry(QtCore.QRect(30, 550, 671, 41))
        self.groupBox_6.setObjectName("groupBox_6")
        # Yes
        self.radioButton_25 = QtWidgets.QRadioButton(self.groupBox_6)
        self.radioButton_25.setGeometry(QtCore.QRect(240, 20, 100, 21))
        self.radioButton_25.setObjectName("radioButton_25")
        # No
        self.radioButton_24 = QtWidgets.QRadioButton(self.groupBox_6)
        self.radioButton_24.setGeometry(QtCore.QRect(346, 20, 100, 21))
        self.radioButton_24.setObjectName("radioButton_24")
        self.radio_groups["optical_drive"] = [self.radioButton_25, self.radioButton_24]
        self.radio_groups_values["optical_drive"] = ['No', 'Yes']

        # Are you currently working from home?
        self.groupBox_2 = QtWidgets.QGroupBox(self.tab)
        self.groupBox_2.setGeometry(QtCore.QRect(30, 190, 671, 41))
        self.groupBox_2.setObjectName("groupBox_2")
        # No
        self.radioButton_22 = QtWidgets.QRadioButton(self.groupBox_2)
        self.radioButton_22.setGeometry(QtCore.QRect(320, 20, 100, 21))
        self.radioButton_22.setObjectName("radioButton_22")
        # Yes
        self.radioButton_21 = QtWidgets.QRadioButton(self.groupBox_2)
        self.radioButton_21.setGeometry(QtCore.QRect(214, 20, 100, 21))
        self.radioButton_21.setObjectName("radioButton_21")
        self.radio_groups["wfh"] = [self.radioButton_21, self.radioButton_22]
        self.radio_groups_values["wfh"] = [0, 1]

        # PREFERENCES TAB
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.layoutWidget2 = QtWidgets.QWidget(self.tab_2)
        self.layoutWidget2.setGeometry(QtCore.QRect(180, 150, 526, 23))
        self.layoutWidget2.setObjectName("layoutWidget2")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.layoutWidget2)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.radioButton_43 = QtWidgets.QRadioButton(self.layoutWidget2)
        self.radioButton_43.setText("")
        self.radioButton_43.setObjectName("radioButton_43")
        self.horizontalLayout_5.addWidget(self.radioButton_43)
        self.radioButton_44 = QtWidgets.QRadioButton(self.layoutWidget2)
        self.radioButton_44.setText("")
        self.radioButton_44.setObjectName("radioButton_44")
        self.horizontalLayout_5.addWidget(self.radioButton_44)
        self.radioButton_45 = QtWidgets.QRadioButton(self.layoutWidget2)
        self.radioButton_45.setText("")
        self.radioButton_45.setObjectName("radioButton_45")
        self.horizontalLayout_5.addWidget(self.radioButton_45)
        self.radioButton_46 = QtWidgets.QRadioButton(self.layoutWidget2)
        self.radioButton_46.setText("")
        self.radioButton_46.setObjectName("radioButton_46")
        self.horizontalLayout_5.addWidget(self.radioButton_46)
        self.radioButton_47 = QtWidgets.QRadioButton(self.layoutWidget2)
        self.radioButton_47.setText("")
        self.radioButton_47.setObjectName("radioButton_47")
        self.horizontalLayout_5.addWidget(self.radioButton_47)
        self.radio_groups["gaming"] = [self.radioButton_43, self.radioButton_44, self.radioButton_45, self.radioButton_46, self.radioButton_47]
        self.radio_groups_values["gaming"] = [1, 2, 3, 4, 5]
        
        self.layoutWidget3 = QtWidgets.QWidget(self.tab_2)
        self.layoutWidget3.setGeometry(QtCore.QRect(180, 266, 526, 23))
        self.layoutWidget3.setObjectName("layoutWidget3")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout(self.layoutWidget3)
        self.horizontalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.radioButton_63 = QtWidgets.QRadioButton(self.layoutWidget3)
        self.radioButton_63.setText("")
        self.radioButton_63.setObjectName("radioButton_63")
        self.horizontalLayout_9.addWidget(self.radioButton_63)
        self.radioButton_64 = QtWidgets.QRadioButton(self.layoutWidget3)
        self.radioButton_64.setText("")
        self.radioButton_64.setObjectName("radioButton_64")
        self.horizontalLayout_9.addWidget(self.radioButton_64)
        self.radioButton_65 = QtWidgets.QRadioButton(self.layoutWidget3)
        self.radioButton_65.setText("")
        self.radioButton_65.setObjectName("radioButton_65")
        self.horizontalLayout_9.addWidget(self.radioButton_65)
        self.radioButton_66 = QtWidgets.QRadioButton(self.layoutWidget3)
        self.radioButton_66.setText("")
        self.radioButton_66.setObjectName("radioButton_66")
        self.horizontalLayout_9.addWidget(self.radioButton_66)
        self.radioButton_67 = QtWidgets.QRadioButton(self.layoutWidget3)
        self.radioButton_67.setText("")
        self.radioButton_67.setObjectName("radioButton_67")
        self.radio_groups["videochat"] = [self.radioButton_63, self.radioButton_64, self.radioButton_65, self.radioButton_66, self.radioButton_67]
        self.radio_groups_values["videochat"] = [1, 2, 3, 4, 5]

        self.horizontalLayout_9.addWidget(self.radioButton_67)
        self.layoutWidget4 = QtWidgets.QWidget(self.tab_2)
        self.layoutWidget4.setGeometry(QtCore.QRect(180, 208, 526, 23))
        self.layoutWidget4.setObjectName("layoutWidget4")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.layoutWidget4)
        self.horizontalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.radioButton_53 = QtWidgets.QRadioButton(self.layoutWidget4)
        self.radioButton_53.setText("")
        self.radioButton_53.setObjectName("radioButton_53")
        self.horizontalLayout_7.addWidget(self.radioButton_53)
        self.radioButton_54 = QtWidgets.QRadioButton(self.layoutWidget4)
        self.radioButton_54.setText("")
        self.radioButton_54.setObjectName("radioButton_54")
        self.horizontalLayout_7.addWidget(self.radioButton_54)
        self.radioButton_55 = QtWidgets.QRadioButton(self.layoutWidget4)
        self.radioButton_55.setText("")
        self.radioButton_55.setObjectName("radioButton_55")
        self.horizontalLayout_7.addWidget(self.radioButton_55)
        self.radioButton_56 = QtWidgets.QRadioButton(self.layoutWidget4)
        self.radioButton_56.setText("")
        self.radioButton_56.setObjectName("radioButton_56")
        self.horizontalLayout_7.addWidget(self.radioButton_56)
        self.radioButton_57 = QtWidgets.QRadioButton(self.layoutWidget4)
        self.radioButton_57.setText("")
        self.radioButton_57.setObjectName("radioButton_57")
        self.horizontalLayout_7.addWidget(self.radioButton_57)
        self.radio_groups["editing"] = [self.radioButton_53, self.radioButton_54, self.radioButton_55, self.radioButton_56, self.radioButton_57]
        self.radio_groups_values["editing"] = [1, 2, 3, 4, 5]

        self.layoutWidget5 = QtWidgets.QWidget(self.tab_2)
        self.layoutWidget5.setGeometry(QtCore.QRect(180, 63, 526, 23))
        self.layoutWidget5.setObjectName("layoutWidget5")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.layoutWidget5)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.radioButton_7 = QtWidgets.QRadioButton(self.layoutWidget5)
        self.radioButton_7.setText("")
        self.radioButton_7.setObjectName("radioButton_7")
        self.horizontalLayout.addWidget(self.radioButton_7)
        self.radioButton_6 = QtWidgets.QRadioButton(self.layoutWidget5)
        self.radioButton_6.setText("")
        self.radioButton_6.setObjectName("radioButton_6")
        self.horizontalLayout.addWidget(self.radioButton_6)
        self.radioButton_9 = QtWidgets.QRadioButton(self.layoutWidget5)
        self.radioButton_9.setText("")
        self.radioButton_9.setObjectName("radioButton_9")
        self.horizontalLayout.addWidget(self.radioButton_9)
        self.radioButton_26 = QtWidgets.QRadioButton(self.layoutWidget5)
        self.radioButton_26.setText("")
        self.radioButton_26.setObjectName("radioButton_26")
        self.horizontalLayout.addWidget(self.radioButton_26)
        self.radioButton_27 = QtWidgets.QRadioButton(self.layoutWidget5)
        self.radioButton_27.setText("")
        self.radioButton_27.setObjectName("radioButton_27")
        self.horizontalLayout.addWidget(self.radioButton_27)
        self.radio_groups["budget_2"] = [self.radioButton_7, self.radioButton_6, self.radioButton_9, self.radioButton_26, self.radioButton_27]
        self.radio_groups_values["budget_2"] = [1, 2, 3, 4, 5]

        self.layoutWidget6 = QtWidgets.QWidget(self.tab_2)
        self.layoutWidget6.setGeometry(QtCore.QRect(180, 121, 526, 23))
        self.layoutWidget6.setObjectName("layoutWidget6")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.layoutWidget6)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.radioButton_38 = QtWidgets.QRadioButton(self.layoutWidget6)
        self.radioButton_38.setText("")
        self.radioButton_38.setObjectName("radioButton_38")
        self.horizontalLayout_4.addWidget(self.radioButton_38)
        self.radioButton_39 = QtWidgets.QRadioButton(self.layoutWidget6)
        self.radioButton_39.setText("")
        self.radioButton_39.setObjectName("radioButton_39")
        self.horizontalLayout_4.addWidget(self.radioButton_39)
        self.radioButton_40 = QtWidgets.QRadioButton(self.layoutWidget6)
        self.radioButton_40.setText("")
        self.radioButton_40.setObjectName("radioButton_40")
        self.horizontalLayout_4.addWidget(self.radioButton_40)
        self.radioButton_41 = QtWidgets.QRadioButton(self.layoutWidget6)
        self.radioButton_41.setText("")
        self.radioButton_41.setObjectName("radioButton_41")
        self.horizontalLayout_4.addWidget(self.radioButton_41)
        self.radioButton_42 = QtWidgets.QRadioButton(self.layoutWidget6)
        self.radioButton_42.setText("")
        self.radioButton_42.setObjectName("radioButton_42")
        self.horizontalLayout_4.addWidget(self.radioButton_42)
        self.radio_groups["multi-tasking"] = [self.radioButton_38, self.radioButton_39, self.radioButton_40, self.radioButton_41, self.radioButton_42]
        self.radio_groups_values["multi-tasking"] = [1, 2, 3, 4, 5]

        self.layoutWidget7 = QtWidgets.QWidget(self.tab_2)
        self.layoutWidget7.setGeometry(QtCore.QRect(180, 237, 526, 23))
        self.layoutWidget7.setObjectName("layoutWidget7")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.layoutWidget7)
        self.horizontalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.radioButton_58 = QtWidgets.QRadioButton(self.layoutWidget7)
        self.radioButton_58.setText("")
        self.radioButton_58.setObjectName("radioButton_58")
        self.horizontalLayout_8.addWidget(self.radioButton_58)
        self.radioButton_59 = QtWidgets.QRadioButton(self.layoutWidget7)
        self.radioButton_59.setText("")
        self.radioButton_59.setObjectName("radioButton_59")
        self.horizontalLayout_8.addWidget(self.radioButton_59)
        self.radioButton_60 = QtWidgets.QRadioButton(self.layoutWidget7)
        self.radioButton_60.setText("")
        self.radioButton_60.setObjectName("radioButton_60")
        self.horizontalLayout_8.addWidget(self.radioButton_60)
        self.radioButton_61 = QtWidgets.QRadioButton(self.layoutWidget7)
        self.radioButton_61.setText("")
        self.radioButton_61.setObjectName("radioButton_61")
        self.horizontalLayout_8.addWidget(self.radioButton_61)
        self.radioButton_62 = QtWidgets.QRadioButton(self.layoutWidget7)
        self.radioButton_62.setText("")
        self.radioButton_62.setObjectName("radioButton_62")
        self.horizontalLayout_8.addWidget(self.radioButton_62)
        self.radio_groups["startup"] = [self.radioButton_58, self.radioButton_59, self.radioButton_60, self.radioButton_61, self.radioButton_62]
        self.radio_groups_values["startup"] = [1, 2, 3, 4, 5]

        self.layoutWidget8 = QtWidgets.QWidget(self.tab_2)
        self.layoutWidget8.setGeometry(QtCore.QRect(180, 179, 526, 23))
        self.layoutWidget8.setObjectName("layoutWidget8")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.layoutWidget8)
        self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.radioButton_48 = QtWidgets.QRadioButton(self.layoutWidget8)
        self.radioButton_48.setText("")
        self.radioButton_48.setObjectName("radioButton_48")
        self.horizontalLayout_6.addWidget(self.radioButton_48)
        self.radioButton_49 = QtWidgets.QRadioButton(self.layoutWidget8)
        self.radioButton_49.setText("")
        self.radioButton_49.setObjectName("radioButton_49")
        self.horizontalLayout_6.addWidget(self.radioButton_49)
        self.radioButton_50 = QtWidgets.QRadioButton(self.layoutWidget8)
        self.radioButton_50.setText("")
        self.radioButton_50.setObjectName("radioButton_50")
        self.horizontalLayout_6.addWidget(self.radioButton_50)
        self.radioButton_51 = QtWidgets.QRadioButton(self.layoutWidget8)
        self.radioButton_51.setText("")
        self.radioButton_51.setObjectName("radioButton_51")
        self.horizontalLayout_6.addWidget(self.radioButton_51)
        self.radioButton_52 = QtWidgets.QRadioButton(self.layoutWidget8)
        self.radioButton_52.setText("")
        self.radioButton_52.setObjectName("radioButton_52")
        self.horizontalLayout_6.addWidget(self.radioButton_52)
        self.radio_groups["streaming"] = [self.radioButton_48, self.radioButton_49, self.radioButton_50, self.radioButton_51, self.radioButton_52]
        self.radio_groups_values["streaming"] = [1, 2, 3, 4, 5]
        
        self.layoutWidget9 = QtWidgets.QWidget(self.tab_2)
        self.layoutWidget9.setGeometry(QtCore.QRect(180, 92, 526, 23))
        self.layoutWidget9.setObjectName("layoutWidget9")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.layoutWidget9)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.radioButton_33 = QtWidgets.QRadioButton(self.layoutWidget9)
        self.radioButton_33.setText("")
        self.radioButton_33.setObjectName("radioButton_33")
        self.horizontalLayout_3.addWidget(self.radioButton_33)
        self.radioButton_34 = QtWidgets.QRadioButton(self.layoutWidget9)
        self.radioButton_34.setText("")
        self.radioButton_34.setObjectName("radioButton_34")
        self.horizontalLayout_3.addWidget(self.radioButton_34)
        self.radioButton_35 = QtWidgets.QRadioButton(self.layoutWidget9)
        self.radioButton_35.setText("")
        self.radioButton_35.setObjectName("radioButton_35")
        self.horizontalLayout_3.addWidget(self.radioButton_35)
        self.radioButton_36 = QtWidgets.QRadioButton(self.layoutWidget9)
        self.radioButton_36.setText("")
        self.radioButton_36.setObjectName("radioButton_36")
        self.horizontalLayout_3.addWidget(self.radioButton_36)
        self.radioButton_37 = QtWidgets.QRadioButton(self.layoutWidget9)
        self.radioButton_37.setText("")
        self.radioButton_37.setObjectName("radioButton_37")
        self.horizontalLayout_3.addWidget(self.radioButton_37)
        self.radio_groups["performance"] = [self.radioButton_33, self.radioButton_34, self.radioButton_35, self.radioButton_36, self.radioButton_37]
        self.radio_groups_values["performance"] = [1, 2, 3, 4, 5]

        self.layoutWidget10 = QtWidgets.QWidget(self.tab_2)
        self.layoutWidget10.setGeometry(QtCore.QRect(0, 60, 171, 231))
        self.layoutWidget10.setObjectName("layoutWidget10")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.layoutWidget10)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label = QtWidgets.QLabel(self.layoutWidget10)
        self.label.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label.setObjectName("label")
        self.verticalLayout_3.addWidget(self.label)
        self.label_2 = QtWidgets.QLabel(self.layoutWidget10)
        self.label_2.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_3.addWidget(self.label_2)
        self.label_3 = QtWidgets.QLabel(self.layoutWidget10)
        self.label_3.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_3.addWidget(self.label_3)
        self.label_4 = QtWidgets.QLabel(self.layoutWidget10)
        self.label_4.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_4.setObjectName("label_4")
        self.verticalLayout_3.addWidget(self.label_4)
        self.label_5 = QtWidgets.QLabel(self.layoutWidget10)
        self.label_5.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_5.setObjectName("label_5")
        self.verticalLayout_3.addWidget(self.label_5)
        self.label_6 = QtWidgets.QLabel(self.layoutWidget10)
        self.label_6.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_6.setObjectName("label_6")
        self.verticalLayout_3.addWidget(self.label_6)
        self.label_7 = QtWidgets.QLabel(self.layoutWidget10)
        self.label_7.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_7.setObjectName("label_7")
        self.verticalLayout_3.addWidget(self.label_7)
        self.label_8 = QtWidgets.QLabel(self.layoutWidget10)
        self.label_8.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_8.setObjectName("label_8")
        self.verticalLayout_3.addWidget(self.label_8)
        self.layoutWidget11 = QtWidgets.QWidget(self.tab_2)
        self.layoutWidget11.setGeometry(QtCore.QRect(180, 30, 531, 17))
        self.layoutWidget11.setObjectName("layoutWidget11")
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout(self.layoutWidget11)
        self.horizontalLayout_10.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.label_9 = QtWidgets.QLabel(self.layoutWidget11)
        self.label_9.setObjectName("label_9")
        self.horizontalLayout_10.addWidget(self.label_9)
        self.label_10 = QtWidgets.QLabel(self.layoutWidget11)
        self.label_10.setObjectName("label_10")
        self.horizontalLayout_10.addWidget(self.label_10)
        self.label_11 = QtWidgets.QLabel(self.layoutWidget11)
        self.label_11.setObjectName("label_11")
        self.horizontalLayout_10.addWidget(self.label_11)
        self.label_12 = QtWidgets.QLabel(self.layoutWidget11)
        self.label_12.setObjectName("label_12")
        self.horizontalLayout_10.addWidget(self.label_12)
        self.label_13 = QtWidgets.QLabel(self.layoutWidget11)
        self.label_13.setObjectName("label_13")
        self.horizontalLayout_10.addWidget(self.label_13)
        self.groupBox_7 = QtWidgets.QGroupBox(self.tab_2)
        self.groupBox_7.setGeometry(QtCore.QRect(10, 320, 691, 201))
        self.groupBox_7.setObjectName("groupBox_7")
        self.layoutWidget12 = QtWidgets.QWidget(self.groupBox_7)
        self.layoutWidget12.setGeometry(QtCore.QRect(20, 40, 633, 131))
        self.layoutWidget12.setObjectName("layoutWidget12")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.layoutWidget12)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.checkBox = QtWidgets.QCheckBox(self.layoutWidget12)
        self.checkBox.setObjectName("checkBox")
        self.verticalLayout_4.addWidget(self.checkBox)
        self.checkBox_2 = QtWidgets.QCheckBox(self.layoutWidget12)
        self.checkBox_2.setObjectName("checkBox_2")
        self.verticalLayout_4.addWidget(self.checkBox_2)
        self.checkBox_3 = QtWidgets.QCheckBox(self.layoutWidget12)
        self.checkBox_3.setObjectName("checkBox_3")
        self.verticalLayout_4.addWidget(self.checkBox_3)
        self.checkBox_4 = QtWidgets.QCheckBox(self.layoutWidget12)
        self.checkBox_4.setObjectName("checkBox_4")
        self.verticalLayout_4.addWidget(self.checkBox_4)
        self.checkBox_5 = QtWidgets.QCheckBox(self.layoutWidget12)
        self.checkBox_5.setObjectName("checkBox_5")
        self.verticalLayout_4.addWidget(self.checkBox_5)
        # Photoshop
        self.checkBox_6 = QtWidgets.QCheckBox(self.layoutWidget12)
        self.checkBox_6.setObjectName("checkBox_6")
        self.verticalLayout_4.addWidget(self.checkBox_6)
        # Videochat
        self.checkBox_7 = QtWidgets.QCheckBox(self.layoutWidget12)
        self.checkBox_7.setObjectName("checkBox_7")
        self.verticalLayout_4.addWidget(self.checkBox_7)
        self.application_checkboxes = [self.checkBox, self.checkBox_6, self.checkBox_7, self.checkBox_2, self.checkBox_3, self.checkBox_4, self.checkBox_5]
    
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.layoutWidget13 = QtWidgets.QWidget(self.tab_3)
        self.layoutWidget13.setGeometry(QtCore.QRect(141, 71, 519, 23))
        self.layoutWidget13.setObjectName("layoutWidget13")
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout(self.layoutWidget13)
        self.horizontalLayout_11.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.radioButton_73 = QtWidgets.QRadioButton(self.layoutWidget13)
        self.radioButton_73.setObjectName("radioButton_73")
        self.horizontalLayout_11.addWidget(self.radioButton_73)
        self.radioButton_74 = QtWidgets.QRadioButton(self.layoutWidget13)
        self.radioButton_74.setObjectName("radioButton_74")
        self.horizontalLayout_11.addWidget(self.radioButton_74)
        self.radioButton_77 = QtWidgets.QRadioButton(self.layoutWidget13)
        self.radioButton_77.setObjectName("radioButton_77")
        self.horizontalLayout_11.addWidget(self.radioButton_77)
        self.radioButton_76 = QtWidgets.QRadioButton(self.layoutWidget13)
        self.radioButton_76.setObjectName("radioButton_76")
        self.horizontalLayout_11.addWidget(self.radioButton_76)
        self.radioButton_75 = QtWidgets.QRadioButton(self.layoutWidget13)
        self.radioButton_75.setObjectName("radioButton_75")
        self.horizontalLayout_11.addWidget(self.radioButton_75)
        self.radio_groups["cpu_pref"] = [self.radioButton_73, self.radioButton_74, self.radioButton_77, self.radioButton_76, self.radioButton_75]
        self.radio_groups_values["cpu_pref"] = ['Intel', 'PreferIntel', 'Idc', 'PreferAMD', 'AMD']
        
        self.label_14 = QtWidgets.QLabel(self.tab_3)
        self.label_14.setGeometry(QtCore.QRect(40, 72, 94, 16))
        self.label_14.setObjectName("label_14")
        self.label_15 = QtWidgets.QLabel(self.tab_3)
        self.label_15.setGeometry(QtCore.QRect(10, 172, 94, 16))
        self.label_15.setObjectName("label_15")
        self.layoutWidget_2 = QtWidgets.QWidget(self.tab_3)
        self.layoutWidget_2.setGeometry(QtCore.QRect(111, 171, 587, 23))
        self.layoutWidget_2.setObjectName("layoutWidget_2")
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout(self.layoutWidget_2)
        self.horizontalLayout_12.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.radioButton_78 = QtWidgets.QRadioButton(self.layoutWidget_2)
        self.radioButton_78.setObjectName("radioButton_78")
        self.horizontalLayout_12.addWidget(self.radioButton_78)
        self.radioButton_79 = QtWidgets.QRadioButton(self.layoutWidget_2)
        self.radioButton_79.setObjectName("radioButton_79")
        self.horizontalLayout_12.addWidget(self.radioButton_79)
        self.radioButton_80 = QtWidgets.QRadioButton(self.layoutWidget_2)
        self.radioButton_80.setObjectName("radioButton_80")
        self.horizontalLayout_12.addWidget(self.radioButton_80)
        self.radioButton_81 = QtWidgets.QRadioButton(self.layoutWidget_2)
        self.radioButton_81.setObjectName("radioButton_81")
        self.horizontalLayout_12.addWidget(self.radioButton_81)
        self.radioButton_82 = QtWidgets.QRadioButton(self.layoutWidget_2)
        self.radioButton_82.setObjectName("radioButton_82")
        self.radio_groups["gpu_pref"] = [self.radioButton_78, self.radioButton_79, self.radioButton_80, self.radioButton_81, self.radioButton_82]
        self.radio_groups_values["gpu_pref"] = ['NVIDIA', 'PreferNVIDIA', 'Idc', 'PreferAMD', 'AMD']
        
        self.horizontalLayout_12.addWidget(self.radioButton_82)
        self.groupBox_8 = QtWidgets.QGroupBox(self.tab_3)
        self.groupBox_8.setGeometry(QtCore.QRect(20, 250, 671, 201))
        self.groupBox_8.setObjectName("groupBox_8")
        self.layoutWidget14 = QtWidgets.QWidget(self.groupBox_8)
        self.layoutWidget14.setGeometry(QtCore.QRect(61, 41, 186, 131))
        self.layoutWidget14.setObjectName("layoutWidget14")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.layoutWidget14)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.radioButton_68 = QtWidgets.QRadioButton(self.layoutWidget14)
        self.radioButton_68.setObjectName("radioButton_68")
        self.verticalLayout_5.addWidget(self.radioButton_68)
        self.radioButton_69 = QtWidgets.QRadioButton(self.layoutWidget14)
        self.radioButton_69.setObjectName("radioButton_69")
        self.verticalLayout_5.addWidget(self.radioButton_69)
        self.radioButton_70 = QtWidgets.QRadioButton(self.layoutWidget14)
        self.radioButton_70.setObjectName("radioButton_70")
        self.verticalLayout_5.addWidget(self.radioButton_70)
        self.radioButton_71 = QtWidgets.QRadioButton(self.layoutWidget14)
        self.radioButton_71.setObjectName("radioButton_71")
        self.verticalLayout_5.addWidget(self.radioButton_71)
        self.radioButton_72 = QtWidgets.QRadioButton(self.layoutWidget14)
        self.radioButton_72.setObjectName("radioButton_72")
        self.radio_groups["min_ram"] = [self.radioButton_68, self.radioButton_69, self.radioButton_70, self.radioButton_71, self.radioButton_72]
        self.radio_groups_values["min_ram"] = ['Idc', '16', '32', '64', '128']

        self.verticalLayout_5.addWidget(self.radioButton_72)
        self.textEdit = QtWidgets.QTextEdit(self.tab_3)
        self.textEdit.setGeometry(QtCore.QRect(150, 470, 221, 31))
        self.textEdit.setObjectName("textEdit")
        self.label_16 = QtWidgets.QLabel(self.tab_3)
        self.label_16.setGeometry(QtCore.QRect(20, 476, 111, 16))
        self.label_16.setObjectName("label_16")
        self.tabWidget.addTab(self.tab_3, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        app_logger.info(f'{self.__class__.__name__} initialized')
        app_logger.info(f'initializing PCBR')
        self.pcbr = PCBR(
            cbl_path="data/pc_specs.csv",
            cpu_path="data/cpu_table.csv",
            gpu_path="data/gpu_table.csv",
            ram_path="data/ram_table.csv",
            ssd_path="data/ssd_table.csv",
            hdd_path="data/hdd_table.csv",
            opt_drive_path="data/optical_drive_table.csv",
            feature_scalers_meta="data/feature_scalers.json",
            feature_relevance_path="data/feature_relevance.csv",
            output_retain_path='data/retained',
            output_saved_model_path='data/pcbr_stored'
        )
        app_logger.info(f'PCBR initialized')

        for k, v in self.__dict__.items():
            if "radioButton" in k:
                v.clicked.connect(self.msgbtn)
                
        for cb in self.application_checkboxes:
            cb.clicked.connect(self.msgbtn)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "User Profile"))
        self.pushButton.setText(_translate("MainWindow", "Done"))
        self.groupBox_5.setTitle(_translate("MainWindow", "How frequently do you replace your computer?"))
        self.radioButton_19.setText(_translate("MainWindow", "5-7 years"))
        self.radioButton_18.setText(_translate("MainWindow", "2-5 years"))
        self.radioButton_17.setText(_translate("MainWindow", "1-2 years"))
        self.radioButton_20.setText(_translate("MainWindow", "7-10 years"))
        self.groupBox.setTitle(_translate("MainWindow", "What is your experience level with computers?"))
        self.radioButton_5.setText(_translate("MainWindow", "My name is Linus Torvalds"))
        self.radioButton_2.setText(_translate("MainWindow", "Novice"))
        self.radioButton_3.setText(_translate("MainWindow", "Intermediate"))
        self.radioButton_4.setText(_translate("MainWindow", "Expert"))
        self.radioButton.setText(_translate("MainWindow", "They scare me"))
        self.groupBox_4.setTitle(_translate("MainWindow", "What is your budget?"))
        self.radioButton_15.setText(_translate("MainWindow", "Low"))
        self.radioButton_14.setText(_translate("MainWindow", "Medium"))
        self.radioButton_16.setText(_translate("MainWindow", "High"))
        self.groupBox_3.setTitle(_translate("MainWindow", "What is the primary use of this computer?"))
        self.radioButton_13.setText(_translate("MainWindow", "Machine Learning programming"))
        self.radioButton_8.setText(_translate("MainWindow", "Home/casual use"))
        self.radioButton_23.setText(_translate("MainWindow", "Other programming"))
        self.radioButton_11.setText(_translate("MainWindow", "Work"))
        self.radioButton_10.setText(_translate("MainWindow", "Gaming"))
        self.radioButton_12.setText(_translate("MainWindow", "Graphics/music/video production"))
        self.groupBox_6.setTitle(_translate("MainWindow", "Do you need an optical drive?"))
        self.radioButton_25.setText(_translate("MainWindow", "Yes"))
        self.radioButton_24.setText(_translate("MainWindow", "No"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Are you currently working from home?"))
        self.radioButton_22.setText(_translate("MainWindow", "No"))
        self.radioButton_21.setText(_translate("MainWindow", "Yes"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Basic"))
        self.label.setText(_translate("MainWindow", "Budget"))
        self.label_2.setText(_translate("MainWindow", "Performance"))
        self.label_3.setText(_translate("MainWindow", "Multi-tasking"))
        self.label_4.setText(_translate("MainWindow", "Gaming"))
        self.label_5.setText(_translate("MainWindow", "Streaming videos"))
        self.label_6.setText(_translate("MainWindow", "Editing videos/photos/music"))
        self.label_7.setText(_translate("MainWindow", "Fast startup/shutdown time"))
        self.label_8.setText(_translate("MainWindow", "Video chat"))
        self.label_9.setText(_translate("MainWindow", "Not at all"))
        self.label_10.setText(_translate("MainWindow", "Little"))
        self.label_11.setText(_translate("MainWindow", "Somewhat"))
        self.label_12.setText(_translate("MainWindow", "Rather"))
        self.label_13.setText(_translate("MainWindow", "Very"))
        self.groupBox_7.setTitle(_translate("MainWindow", "Which applications do you run?"))
        self.checkBox.setText(_translate("MainWindow", "Microsoft Office Suite"))
        self.checkBox_2.setText(_translate("MainWindow", "Tensorflow/PyTorch/Keras"))
        self.checkBox_3.setText(_translate("MainWindow", "Compilers"))
        self.checkBox_4.setText(_translate("MainWindow", "High-performance games: Resident Evil Village, Witcher 3, World of Warcraft, Red Dead Redemption"))
        self.checkBox_5.setText(_translate("MainWindow", "Low-performance games: Minecraft, Fortnite: Battle Royale"))
        self.checkBox_6.setText(_translate("MainWindow", "Photoshop"))
        self.checkBox_7.setText(_translate("MainWindow", "Videochat"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Preferences"))
        self.radioButton_73.setText(_translate("MainWindow", "Must be Intel"))
        self.radioButton_74.setText(_translate("MainWindow", "Prefer Intel"))
        self.radioButton_77.setText(_translate("MainWindow", "No preference"))
        self.radioButton_76.setText(_translate("MainWindow", "Prefer AMD"))
        self.radioButton_75.setText(_translate("MainWindow", "Must be AMD"))
        self.label_14.setText(_translate("MainWindow", "CPU Preference"))
        self.label_15.setText(_translate("MainWindow", "GPU Preference"))
        self.radioButton_78.setText(_translate("MainWindow", "Must be NVIDIA"))
        self.radioButton_79.setText(_translate("MainWindow", "Prefer NVIDIA"))
        self.radioButton_80.setText(_translate("MainWindow", "No preference"))
        self.radioButton_81.setText(_translate("MainWindow", "Prefer Radeon"))
        self.radioButton_82.setText(_translate("MainWindow", "Must be Radeon"))
        self.groupBox_8.setTitle(_translate("MainWindow", "Minimum RAM size"))
        self.radioButton_68.setText(_translate("MainWindow", "No minimum"))
        self.radioButton_69.setText(_translate("MainWindow", "16 GB"))
        self.radioButton_70.setText(_translate("MainWindow", "32 GB"))
        self.radioButton_71.setText(_translate("MainWindow", "64 GB"))
        self.radioButton_72.setText(_translate("MainWindow", "128 GB"))
        self.label_16.setText(_translate("MainWindow", "Maximum budget"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Advanced"))

    def center(self, MainWindow):
        qr = MainWindow.frameGeometry()
        cp = QtWidgets.QDesktopWidget().availableGeometry().center()
        qr.moveCenter(cp)
        MainWindow.move(qr.topLeft())

    def check_all_correct(self):
        for rb_group in self.radio_groups.keys():
            if not any([rb.isChecked() for rb in self.radio_groups[rb_group]]):
                app_logger.error('One radio button from one group is not checked!')
                return False

        if not represents_float(self.textEdit.toPlainText()):
            app_logger.error('The maximum budget is not a float number!')
            return False
        return True

    def build_profile_str(self):
        keys = ['experience', 'wfh', 'primary_use', 'budget', 'replace_frequency']
        values = []

        for key in keys:
            for idx, rb in enumerate(self.radio_groups[key]):
                if rb.isChecked():
                    values.append(str(self.radio_groups_values[key][idx]))

        for checkbox in self.application_checkboxes:
            if checkbox.isChecked():
                values.append('1')
            else:
                values.append('0')

        return ', '.join(values)


    def build_pref_str(self):
        keys = ['budget_2', 'performance', 'multi-tasking', 'gaming', 'streaming', 'editing', 'startup', 'videochat']
        values = []
        for key in keys:
            for idx, rb in enumerate(self.radio_groups[key]):
                if rb.isChecked():
                    values.append(str(self.radio_groups_values[key][idx]))

        for idx, checkbox in enumerate(self.application_checkboxes):
            if idx in [1, 2]:
                continue
            if checkbox.isChecked():
                values.append('1')
            else:
                values.append('0')
        return ', '.join(values)

    def build_constraints_str(self):
        keys = ['cpu_pref', 'gpu_pref', 'min_ram', 'optical_drive']
        values = []
        for key in keys:
            for idx, rb in enumerate(self.radio_groups[key]):
                if rb.isChecked():
                    values.append(f'{key}: {self.radio_groups_values[key][idx]}')
        values.append(f'max_budget: {self.textEdit.toPlainText()}')
        return ', '.join(values)

    def run_pcbr(self):
        if not self.check_all_correct():
            app_logger.info(f'all values have not been completed.')
            return
        else:
            app_logger.info(f'all values correct, proceeding to run pcbr')

        profile_str = self.build_profile_str()
        pref_str = self.build_pref_str()
        constraints_str = self.build_constraints_str()

        # profile_str = "2, 1, Programming, 1, 3, 1, 0, 0, 0, 1, 0, 0"
        # pref_str = "5, 2, 3, 1, 2, 1, 3, 4, 1, 0, 1, 0, 0"
        # constraints_str = "cpu_brand: PreferIntel, gpu_brand: AMD, min_ram: 32, max_budget: 1500, optical_drive: yes"

        app_logger.info(f'profile_str: {profile_str}')
        app_logger.info(f'pref_str: {pref_str}')
        app_logger.info(f'constraints_str: {constraints_str}')

        user_request = UserRequest(
            profile_str,
            pref_str,
            constraints_str,
            self.pcbr.transformations,
            self.pcbr.feature_relevance_matrix
        )
        self.pcbr.set_input_profile(user_request)

        app_logger.info(f'user_request: {user_request}')

        st = time.time()
        nearest_cases, distances = self.pcbr.retrieve(new_instance=user_request.profile, feature_weights=user_request.preferences, n_neighbors=3)        

        app_logger.info(f'found nearest_cases: {nearest_cases}')

        proposed_solution = self.pcbr.reuse(nearest_cases=nearest_cases[0], distances=distances, user_request=user_request)

        proc_time = time.time()
        rev_ret_time = time.time()

        revision_result = self.revise(proposed_solution)
        if revision_result is not None:  # If the expert has not dropped the solution
            self.pcbr.retain(revision_result, user_request.profile, n_neighbors=3)
            self.pcbr.save_model()

        app_logger.info(f'time for processing an instance {proc_time - st:.2f}s, time for revision and {rev_ret_time - st:.2f}s')

    def revise(self, proposed_solution):
        proposed_solutions = [proposed_solution]
        index = ['Proposed solution']
        columns = self.pcbr.target_attributes.columns.tolist()
        satisfactory = self.print_solutions(proposed_solutions, columns, index)
        app_logger.info(f'solution is satisfactory: {satisfactory}')

        if not satisfactory:
            revise_result = self.revise_possibilities(proposed_solutions, columns)
            if revise_result is not None:
                index = ['Final revised solution']
                app_logger.info(f'result revised')
                self.print_solutions([revise_result], columns, index, text="Final Solution")
        else:
            revise_result = proposed_solution
        return revise_result

    def revise_possibilities(self, proposed_solutions, components):
        want_to_modify = self.ask_binary_question(
            'Would you like to change any components (y/n)? (n will drop the solution)'
        )
        if want_to_modify:
            remaining_components = components[:-1]
            index = ['Original solution']
            satisfactory = False
            while len(remaining_components) > 0 and not satisfactory:
                selected_component_idx = self.ask_radio_options(remaining_components, title='Select one component type between the following ones:')
                selected_component = remaining_components[selected_component_idx]
                remaining_components.pop(selected_component_idx)
                all_values = self.pcbr.extract_all_values_for_component(selected_component)
                latest_solution = proposed_solutions[len(proposed_solutions) - 1]
                latest_solution_price = proposed_solutions[len(proposed_solutions) - 1][-1]
                component_id = components.index(selected_component)
                latest_value = latest_solution[component_id]
                all_values.remove(latest_value)
                if len(all_values) > 0:
                    selected_new_value = self.show_values_and_get_choice(selected_component, all_values)
                    app_logger.info(f'Selected {selected_new_value}')
                    difference = self.pcbr.calculate_price_difference(selected_component, latest_value, selected_new_value)
                    latest_solution_price += difference
                    new_solution = latest_solution.copy()
                    new_solution[component_id] = selected_new_value
                    new_solution[-1] = latest_solution_price
                    proposed_solutions.append(new_solution)
                else:
                    # TODO: QMessageBox
                    app_logger.info('Sorry but the chosen component has not valid alternatives!')
                    app_logger.info('\nSelect one component number between the following ones:')
            
                index.append(len(index))
                if len(remaining_components) > 0:
                    satisfactory = not self.print_solutions(proposed_solutions, components, index, text="Would you like to change something more (y/n)?")
                else:
                    satisfactory = True
            return self.ask_which_solution_is_final(proposed_solutions, components, index)
        else:
            app_logger.info('The proposed solution has been dropped!')
            return None

    def ask_which_solution_is_final(self, proposed_solutions, columns, index):
        columns = list(columns)
        columns[-2] = "Optical Drive"

        dataframe = pd.DataFrame(proposed_solutions, columns=columns, index=index)

        qbox = QtWidgets.QMessageBox()
        qbox.setFixedWidth(800)
        qbox.setText("Final proposed solutions (showcase window, close to select)")
        qbox.setFont(QtGui.QFont('Consolas', 9, QtGui.QFont.Monospace))
        qbox.setInformativeText(dataframe.to_markdown())
        qbox.setWindowTitle("Solutions")
        qbox.setStandardButtons(QtWidgets.QMessageBox.Yes | QtWidgets.QMessageBox.No)
        qbox.show()

        return_value = self.ask_radio_options(index, title='Which option is final')
        qbox.close()
        if return_value is None:
            self.Dialog.close()
        return proposed_solutions[return_value]
    
    def show_values_and_get_choice(self, selected_component, all_values):
        selected_component_idx = self.ask_radio_options(all_values, title=f'Select one {selected_component} type between the following ones:')
        return all_values[selected_component_idx]

    def ask_radio_options(self, options, title="", size=(322, 280)):
        Dialog = QtWidgets.QDialog()
        ui = MultiChoiceDialog()
        ui.setupUi(Dialog, options=options, title=title, size=size)
        Dialog.show()
        Dialog.setModal(True)
        Dialog.exec()
        return ui.result

    def print_solutions(self, proposed_solutions, columns, index, text=None):
        columns = list(columns)
        columns[-2] = "Optical Drive"
        dataframe = pd.DataFrame(proposed_solutions, columns=columns, index=index)
        
        if text is None:
            if len(index) == 1:
                text = "The proposed solution is the following:"
            else:
                text = "The modified solutions are the following:"

        revise_qbox = QtWidgets.QMessageBox()
        revise_qbox.setFixedWidth(800)
        revise_qbox.setText(text)
        revise_qbox.setFont(QtGui.QFont('Consolas', 9, QtGui.QFont.Monospace))
        revise_qbox.setInformativeText(dataframe.to_markdown())
        revise_qbox.setWindowTitle("Solutions")
        revise_qbox.setDetailedText(dataframe.to_markdown())
        revise_qbox.setStandardButtons(QtWidgets.QMessageBox.Yes | QtWidgets.QMessageBox.No)

        returnValue = revise_qbox.exec()
        return returnValue == QtWidgets.QMessageBox.Yes

    def ask_binary_question(self, message):
        qbox = QtWidgets.QMessageBox()
        qbox.setText(message)
        qbox.setFont(QtGui.QFont('Consolas', 9, QtGui.QFont.Monospace))
        qbox.setWindowTitle("Question")
        qbox.setStandardButtons(QtWidgets.QMessageBox.Yes | QtWidgets.QMessageBox.No)

        returnValue = qbox.exec()
        return returnValue == QtWidgets.QMessageBox.Yes

    def msgbtn(self, i):
        pressed = ""
        for k, v in self.__dict__.items():
            if "radioButton" in k:
                if v.isChecked():
                    pressed += v.text() + ", "
        for cb in self.application_checkboxes:
            if cb.isChecked():
                pressed += cb.text() + ", "
        app_logger.debug(pressed)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
